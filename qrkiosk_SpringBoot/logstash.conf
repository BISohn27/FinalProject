# Sample Logstash configuration for creating a simple
# Beats -> Logstash -> Elasticsearch pipeline.

input {
  jdbc {
        jdbc_driver_library => "C:/Users/skylo/Downloads/ElasticSearch/logstash-7.15.2/config/mysql-connector-java-8.0.26.jar"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        jdbc_connection_string => "jdbc:mysql://localhost:3306/qr?characterEncoding=UTF-8"
        jdbc_user => "root"
        jdbc_password => "java"
        clean_run => true
        tracking_column => "unix_ts_in_secs" #로그스태시가 읽은 마지막 레코드를 식별하기 위하여 사용, unix_ts_in_sesc는 modification_time을 저장하고 트래킹
        use_column_value => true  #sql_last_value 사용 유무
        tracking_column_type => "numeric"  #별칭
        schedule => "*/5 * * * * *" #수집주기
        statement => "SELECT *, UNIX_TIMESTAMP(modification_time) AS unix_ts_in_secs FROM enterprise 
			WHERE (UNIX_TIMESTAMP(modification_time) >:sql_last_value AND modification_time < NOW() AND valid = 'y' AND confirm='y') 
			ORDER BY modification_time ASC"
  }
}

filter {
  mutate {
    remove_field => ["@version","@timestamp","unix_ts_in_secs","password", "valid", "confirm","modification_time"]
  }
}

output {
  elasticsearch {
    hosts => ["http://localhost:9200"]
    index => "business"
    document_id => "%{eno}"
  }
}
